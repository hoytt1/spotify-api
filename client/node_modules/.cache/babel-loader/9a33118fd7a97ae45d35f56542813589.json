{"ast":null,"code":"var _jsxFileName = \"/home/tcsuser/Desktop/Projects/test/spotify-api/client/src/App.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport './App.css';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      item: {\n        album: {\n          images: [{\n            url: ''\n          }]\n        },\n        name: '',\n        artists: [{\n          name: ''\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    console.log(item);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentlyPlayingTrack().then(response => {\n      this.setState({\n        nowPlaying: {\n          item: response.item,\n          is_playing: response.is_playing,\n          progress_ms: response.progress_ms\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.item.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.item.album,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), this.state.loggedIn && // <button onClick = {() => this.getNowPlaying() }> Check Now Playing </button> \n    React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tcsuser/Desktop/Projects/test/spotify-api/client/src/App.js"],"names":["React","Component","SpotifyWebApi","Player","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","console","log","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentlyPlayingTrack","then","response","setState","nowPlaying","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport './App.css';\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token); \n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      item: { \n        album : {\n           images: [{url: ''}]\n          }, \n        name: '',\n        artists: [{ name : ''}],\n        duration_ms : 0,\n      },\n      is_playing : \"Paused\",\n      progress_ms : 0\n    };\n\n    console.log(item);\n  };\n\n  getHashParams() {\n    var hashParams= {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n           q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentlyPlayingTrack()\n      .then((response) => {\n        this.setState({\n          nowPlaying : {\n            item: response.item,\n            is_playing: response.is_playing,\n            progress_ms: response.progress_ms,\n          }\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <a href='http://localhost:8888'> Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.item.name }\n        </div>\n        <div>\n          <img src = { this.state.item.album } style = {{ height : 150 }} />\n        </div>\n        { this.state.loggedIn && \n          // <button onClick = {() => this.getNowPlaying() }> Check Now Playing </button> \n          <Player item = { this.state.item }\n          is_playing = { this.state.is_playing }\n          progress_ms = { this.progress_ms } />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}