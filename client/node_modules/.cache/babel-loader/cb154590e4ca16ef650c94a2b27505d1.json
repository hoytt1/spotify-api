{"ast":null,"code":"var _jsxFileName = \"/home/tcsuser/Desktop/Projects/test/spotify-api/client/src/App.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'; // import logo from './logo.svg';\n\nimport './App.css';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Check Now Playing \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tcsuser/Desktop/Projects/test/spotify-api/client/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CACA;;AACA,OAAO,WAAP;AAEA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;AAEA,MAAME,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACG,YAArB;;AACA,QAAID,KAAJ,EAAW;AACTL,MAAAA,UAAU,CAACO,cAAX,CAA0BF,KAA1B;AACD;;AACD,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KADd;AAEXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAG,aAAT;AAAwBC,QAAAA,QAAQ,EAAG;AAAnC;AAFD,KAAb;AAID;;AAEDR,EAAAA,aAAa,GAAG;AACd,QAAIS,UAAU,GAAE,EAAhB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACOC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADX;AAEAN,IAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,WAAOF,CAAP,EAAU;AACRD,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACD;;AACD,WAAOH,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAG;AACdvB,IAAAA,UAAU,CAACwB,yBAAX,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZjB,QAAAA,UAAU,EAAG;AACXC,UAAAA,IAAI,EAAGe,QAAQ,CAACE,IAAT,CAAcjB,IADV;AAEXC,UAAAA,QAAQ,EAAGc,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAF9B;AADD,OAAd;AAMD,KARH;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACiB,KAAKxB,KAAL,CAAWE,UAAX,CAAsBC,IADvC,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAK,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,QAAnC;AAA8C,MAAA,KAAK,EAAI;AAAEqB,QAAAA,MAAM,EAAG;AAAX,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQI,KAAKzB,KAAL,CAAWC,QAAX,IACA;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKc,aAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATJ,CADF;AAcD;;AAtDyB;;AAyD5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n// import logo from './logo.svg';\nimport './App.css';\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token); \n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name : 'Not Checked', albumArt : ''}\n    }\n  }\n\n  getHashParams() {\n    var hashParams= {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n           q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying : {\n            name : response.item.name,\n            albumArt : response.item.album.images[0].url\n          }\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <a href='http://localhost:8888'> Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n          <img src = { this.state.nowPlaying.albumArt } style = {{ height : 150 }} />\n        </div>\n        { this.state.loggedIn && \n          <button onClick = {() => this.getNowPlaying() }> Check Now Playing </button> \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}